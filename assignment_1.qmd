---
title: "assignment_1"
format: html
editor: visual
bibliography: [MSB104.bib, MSB104_Assignment.bib, MSB104_Assignment1.bib]
author: Marius Martinussen, Espen Knutsen og Asbjørn Gaard
---

```{r}
#| label: setup
#| output: false
#| message: false
#| echo: false
library(eurostat)
library(dineq)
library(readr)
library(tidyverse)
library(stringr)
library(huxtable)
library(vtable)
library(ggplotify)
library(grid)
library(dplyr)
library(gridExtra)
library(ggplot2)
library(broom)

```

## Part A: Sub-national GDP and GDP per capita

### 1. Data acquisition

By using Eurostat, we have downloaded data containing GDP and population for each country in the EU from year 1990 to 2023.
However, we are only interested in the following countries from 2000 to 2020:

### Countries of interest

-   Italy
-   Sweden
-   Belgium
-   Austria
-   Croatia
-   Serbia
-   Bosnia and Herzegovina
-   Bulgaria
-   Germany

Below is a short extract of the raw datasets from Eurostat.

```{r}
#| echo: FALSE
#| output: FALSE
# Loading datasets
# Country code list: "IT", "SE", "BE", "AT", "HR", "RS", "BA", "BG", "DE")
# 
nama_10r_3gdp_linear_csv <- read_csv("nama_10r_3gdp_linear.csv.gz", 
    na = "NA")
demo_r_pjanaggr3_linear_csv <- read_csv("demo_r_pjanaggr3_linear.csv.gz", 
    na = "NA")
roads <- read_csv("roads.gz")
educ <- read_csv("educ.gz")
aream2 <- read_csv("aream2.gz")

# Subset of countries from 2000 to 2020
# Filtering geo = 5 to only get NUTS3 level data
gdp_filtered <- nama_10r_3gdp_linear_csv |> 
  filter(
    nchar(geo) == 5, 
    unit == "MIO_EUR", 
      TIME_PERIOD %in% c(2000:2020),
    str_sub(geo, start = 1L, end = 2L) %in% c("IT", "SE", "BE", "AT", "HR", "RS", "BA", "BG", "DE")
    ) |> 
  select(
    year = TIME_PERIOD, 
    geo, GDP = OBS_VALUE
    ) 

# Filtering population demo for nuts3 countries and years
# Filtering sex = T to only get the total of both genders
# Filtering age = TOTAL.
pop <- demo_r_pjanaggr3_linear_csv |> 
    filter(
      nchar(geo) == 5,
      sex == "T",
      age == "TOTAL",
      TIME_PERIOD %in% c(2000:2020), 
    str_sub(geo, start = 1L, end = 2L) %in% c("IT", "SE", "BE", "AT", "HR", "RS", "BA", "BG", "DE")
    ) |> 
  select(
    year = TIME_PERIOD, 
    geo, Population = OBS_VALUE
    ) 

# Merging the two datasets
merged_data <- merge(gdp_filtered, pop, by = "geo") |> 
  select(
    -year.y,
    Year = year.x,)

# merging the two datasets from eurostat and removing NA and zero values
merged_data <- merge(gdp_filtered, pop, by = c("geo","year"), all = TRUE) |> 
filter(!is.na(Population),
         Population != 0,
         GDP != 0, 
         GDP != "NA"
)
# Generating the GDP per capita variable
merged_data <- merged_data |> 
  mutate(
    GDPpcn3 = GDP / Population
  )
# Adding GDP variable by deviding gdp on population
merged_data <- merged_data |> 
  mutate(GDPpcn3 = (GDP / Population)*1000000)

# Calculating GINI in nuts3 data for nuts2 regions to measure inequity on a nuts2 scale
merged_data <- merged_data |> 
 mutate(
    nuts2 = substr(geo, 1,4),
    nuts0 = substr(geo, 1,2)
 )

# Grouping NUTS3 to NUTS2
# Adding the gini coefficient to the gpd pr capita variable and weighing by population (grouped by nuts2)
merged_data <- merged_data |> 
  filter(!is.na(Population),
         Population != 0,
         GDPpcn3 != 0, 
         GDPpcn3 != "NA"
  ) |> 
group_by(nuts2, year) |> 
  mutate(gini_n2 = gini.wtd(GDPpcn3, Population), 
         GDPpcn2 = mean(GDPpcn3), 
         popn2 = sum(Population),
         GDPn2 = sum(GDP),
         numberofregions = n_distinct(geo)
         ) |> 
  slice(1) |> 
  ungroup() |> 
  select(nuts0, nuts2, geo, year, GDP, Population, GDPpcn3, gini_n2, numberofregions, GDPn2, GDPpcn2, popn2) 
  # number of regions is wrong, want to show number of nuts3 regions in a nuts2 region as a vector

roads <- roads |> 
  select(
    nuts2 = geo, Roadkm = OBS_VALUE, year = TIME_PERIOD
  ) 

educ <- educ |> 
  select(
    nuts2 = geo, age, year = TIME_PERIOD, education = OBS_VALUE, level = isced11
  ) |> 
  filter(nuts2 != "NA", age != "NA", year != "NA", education != "NA") |> 
  filter(str_detect(nuts2, "IT|DE"))

educ <- educ |> 
    filter(str_detect(nuts2, "IT|DE"), nchar(nuts2) == 4, level == "ED5-8") |> 
  select(-age) 

aream2 <- aream2 |> 
  select(
    nuts2 = geo, year = TIME_PERIOD, distance = OBS_VALUE
  )

merged_data <- left_join(merged_data, aream2, by = c("nuts2", "year"))

merged_data <- left_join(merged_data, educ, by = c("nuts2", "year"))

roads <- roads |> 
  filter(str_detect(nuts2, "IT|DE"), nchar(nuts2) == 4)

merged_data <- left_join(merged_data, roads, by = c("nuts2", "year"))





```

```{r}
#| echo: FALSE
nama_10r_3gdp_linear_csv |> 
    print(
    n = 5,
    width = 80
  )

demo_r_pjanaggr3_linear_csv |> 
  print(
    n = 5,
    width = 80
  )

```

\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--

## Description

The first dataset we downloaded from Eurostat was **demo_r_pjanaggr3,** which contains population data from Europe.
In our case, we have selected population data from Sweden, Italy, Belgium, Austria, Croatia, Serbia, Bosnia and Herzegovina, Germany.
According to @eurostat2021, the dataset of demography is a set of statistical numbers each country in Europe sends yearly to Eurostat by 31 December of the following calendar year.
Furthermore, the definition of "population" is, according to @eurostat2021, all persons having their residences in a member state, including all live births and deaths during the year when the statistical numbers are heading to Eurostat.
Moreover, the demographic data at a regional level are separated into different groups named NUTS, which are defined as nomenclature for territorial units for statistics [@eurostat2021].
The purpose of the NUTS function is to subdivide the territory of the European Union into 104 regions at NUTS level 1 and break it down by to 281 at NUTS level 2 and 1348 at NUTS level 3 [@eurostat2021].
In the beginning of this paper, we have focused on the numbers of NUTS 3 level, but the dataset containing population data has been broken down by sex and broad age groups (0-14, 15-64 and 65 or more).

The following dataset we downloaded from Eurostat was the **nama_10r_3gdp dataset**.
Furthermore, this dataset is also broken down to NUTS level 3 which focus on GDP data from the sub-regions in Sweden, Italy, Belgium, Austria, Croatia, Serbia, Bosnia and Herzegovina, Germany.
According to @eurostat2023, GDP (Gross domsetsic product) at market prices is defined as the final result of the production activity of resident producer units [@eurostat2023].

**In order to substract the countries in focus, we have used the metadata provided by Eurostat to filter out the data and variables of interest, using their respective country codes. The variables we are interested in are the following:**

-   **geo = Tells us which country and sub-region we are looking at**
-   **time_period = Observed years**
-   **obs_value = The value of the observation**
-   **Unit = Currency**

**By filtering out irrelevant data and variables and rearranging the dataset to provide a clearer view, results with the following datasets:**

```{r}
#| echo: FALSE
gdp_filtered |> 
  print(
    n = 5,
    width = 80
  )
pop |> 
  print(
    n = 5,
    width = 80
  )

```

### 2. GDP per capita calculation

In order to visualize the GDP per capita, we have merged the two datasets together and added a new variable that executes this formula in order to generate the GDP per capita for every country.

$y_i = \frac{\text{GDP}_i}{\text{population}_i} * 10^6$

It is worth noting that the GDP data from Eurostat is represented in million euros.
In order to better understand the graphs we have produced, we decided to multiply by one million, so that all numbers in the graph containing the GDP per capita is in full Euros.

GDP or Gross Domestic Product is a measure of value creation in a country.
This is described by Eurostat to be "a measure of economic activity, defined as the value of all goods and services produced minus the value of any goods or services used in their creation" @eurostat2023.
How Eurostat calculates the annual growth rate in GDP "comparisons of the dynamics of economic development both over time and between economies of different sizes" @eurostat2023.
To measure the growth rate of GDP over time "in volume, GDP in current prices is valued at the prices of the previous year, and the volume changes thus calculated are imposed on the level of a reference year; this is called a chain-linked series. Consequently, price movements will not inflate growth" @eurostat2023.

### 3. Descriptive analysis

### Austria

```{r}
#| echo: FALSE
merged_data |> 
  filter(str_detect(geo, "AT")) |> 
  ggplot(mapping = aes(
  x = year, 
  y = GDPpcn3, 
  colour = geo,
)) + 
  geom_line() +
  labs(title = "Austria",
       x = "Year",
       y = "GDP per capita")
```

```{r}
#| echo: FALSE
# Generates descriptive statistics for variables in plot for AT
merged_data |> 
  filter(str_detect(geo, "AT")) |> 
  select(-1,-year) |> 
  st("GDPpcn3", add.median = TRUE)
```

Outliers: None

The sub-regions follow the same trends in GDP per per capita, with certain exceptions linked to a marked decrease in AT331 (Außerfern) in connection with 2008 (the financial crisis).
This may be due to the fact that this is an administrative district, and is often more exposed to a financial crisis.

All sub-regions have a decline in GDP per per capita from 2019 -- 2020 in connection with covid 19, where some sub-regions have a more marked decline than others.
This probably has a natural explanation in how the guidelines were followed through covid and how much the individual sub-region's gdp per capita depends on tourism.

In summary of the data set, Austria has a minimum value and a maximum value of 14,236 and 57,760 gdp per year, respectively.
capita, with a standard deviation of 9542.
This standard deviation measures how much spread or variance there is in the values in the data set.
Furthermore, the data set has an average of 32,066 GDP per capita, with a median of 30,679 GDP per capita.
When the median is lower than the mean, this means that the data set has more values closer to the minimum value in the data set.

### Belgium

```{r}
#| echo: FALSE
merged_data |> 
  filter(str_detect(geo, "BE")) |> 
  ggplot(mapping = aes(
  x = year, 
  y = GDPpcn3, 
  colour = geo
)) + 
  geom_line() +
    labs(title = "Belgium",
       x = "Year",
       y = "GDP per capita")
```

```{r}
#| echo: FALSE
# Generates descriptive statistics for variables in plot for BE
merged_data |> 
  filter(str_detect(geo, "BE")) |> 
  select(-1,-year) |> 
   st("GDPpcn3", add.median = TRUE)
```

The data set shows us that we have an outliers in the form of BE100 (Brussels) which has a significantly higher GDP per capita.
This has a natural connection with the fact that Brussels is the capital of Belgium, and has a higher traffic for trade than the other sub-regions.

Summarized by the data set, Belgium has a minimum value and a maximum value of 12756 and 71959 gdp per year respectively.
capita, with a standard deviation of 10143.
This standard deviation measures how much spread or variance there is in the values in the data set.
Furthermore, the data set has an average of 29,182 GDP per capita, with a median of 27,132 GDP per capita.
When the median is lower than the mean, this means that the data set has more values closer to the minimum value in the data set.

### Bulgaria

```{r}
#| echo: FALSE
merged_data |> 
  filter(str_detect(geo, "BG")) |> 
  ggplot(mapping = aes(
  x = year, 
  y = GDPpcn3, 
  colour = geo
)) + 
  geom_line() +
    labs(title = "Bulgaria",
       x = "Year",
       y = "GDP per capita")
```

```{r}
#| echo: FALSE
# Generates descriptive statistics for variables in plot for BG
merged_data |> 
  filter(str_detect(geo, "BG")) |> 
  select(-1,-year) |> 
   st("GDPpcn3", add.median = TRUE)
```

The explanation behind the significantly higher GDP per capita.
capita in Sofia is that it is the capital of Bulgaria and is the administrative, cultural and economic center of the country.

Summarized by the data set, Bulgaria has a minimum value and a maximum value of 1087 and 19833 GDP per year respectively.
capita, with a standard deviation of 2283.
This standard deviation measures how much spread or variance there is in the values in the data set.
Furthermore, the dataset has an average of 3826 GDP per capita, with a median of 3378 GDP per capita.
When the median is lower than the mean, this means that the data set has more values closer to the minimum value in the data set.

Italy

The reason why we divide Italy into north and south is because it makes our ggplot more clear.

### North Italy

```{r}
#| echo: FALSE
# We are deviding italy into two parts, north and south
merged_data |>
  filter(str_detect(geo, "ITC|ITH")) |> 
  ggplot(mapping = aes(
  x = year, 
  y = GDPpcn3, 
  colour = geo
)) + 
  geom_line() +
    labs(title = "North Italy",
       x = "Year",
       y = "GDP per capita")
```

```{r}
#| echo: FALSE
# Generates descriptive statistics for variables in plot for North Italy
merged_data |> 
  filter(str_detect(geo, "ITC|ITH")) |> 
  select(-1,-year) |> 
  st("GDPpcn3", add.median = TRUE)
```

Outliers: ITC4C (milano) og til dels ITH10 (boltzano)

In summary of the data set, Northern Italy has a minimum value and a maximum value of 19,555 and 55,890 gdp respectively.
capita, with a standard deviation of 5107.
This standard deviation measures how much spread or variance there is in the values in the data set.
Furthermore, the dataset has an average of 29,733 GDP per capita, with a median of 29,097 GDP per capita.
When the median is higher than the mean, this means that the data set has more values closer to the maximum value in the data set.

### South Italy

```{r}
#| echo: FALSE
merged_data |> 
  filter(str_detect(geo, "ITF|ITI|ITG")) |> 
  ggplot(mapping = aes(
  x = year, 
  y = GDPpcn3, 
  colour = geo
)) + 
  geom_line() +
    labs(title = "South Italy",
       x = "Year",
       y = "GDP per capita")
```

```{r}
#| echo: FALSE
# Generates descriptive statistics for variables in plot for Southern italy
merged_data |> 
  filter(str_detect(geo, "ITF|ITI|ITG")) |> 
  select(-1,-year) |> 
   st("GDPpcn3", add.median = TRUE)
```

Outliers: ITI14(Chieti), ITI43(Taranto).

Summarized by the data set, Southern Italy has a minimum value and a maximum value of 11713 and 42801 gdp per year respectively.
capita, with a standard deviation of 5302.
This standard deviation measures how much spread or variance there is in the values in the data set.
Furthermore, the data set has an average of 20995 GDP per capita, with a median of 19788 GDP per capita.
When the median is lower than the mean, this means that the data set has more values closer to the minimum value in the data set.

### Sweden

```{r}
#| echo: FALSE
merged_data |> 
  filter(str_detect(geo, "SE")) |> 
  ggplot(mapping = aes(
  x = year, 
  y = GDPpcn3, 
  colour = geo
)) + 
  geom_line() +
    labs(title = "Sweden",
       x = "Year",
       y = "GDP per capita")
```

```{r}
#| echo: FALSE
# Generates descriptive statistics for variables in plot for SE
merged_data |> 
  filter(str_detect(geo, "SE")) |> 
  select(-1,-year) |> 
   st("GDPpcn3", add.median = TRUE)
```

Sweden: We have an extreme value in the form of a significantly higher GDP per capita in sub region SE110 which is Stockholm.
This can be explained by the fact that it is the capital and it is natural that value creation is centralized around Stockholm.

The data shows that there is a fall in GDP per capita throughout Sweden in 2008.
The natural explanation for this would be the financial crisis in 2008.

The data also shows a reduction in 2019 - 2020 in many sub-regions that can be linked to covid 19.
The reason why not all sub-regions had this drop may be that large parts of Sweden did not comply with the restrictions linked to the infection of the virus.

Summarized by the data set, Sweden has a minimum value and a maximum value of 23331 and 66250 GDP per year respectively.
capita, with a standard deviation of 7515.
This standard deviation measures how much spread or variance there is in the values in the data set.
Furthermore, the data set has an average of 35,757 GDP per capita, with a median of 39,550 GDP per capita.
When the median is higher than the mean, this means that the data set has more values closer to the maximum value in the data set.

### Croatia - became a member in 2012

```{r}
#| echo: FALSE
merged_data |> 
  filter(str_detect(geo, "HR")) |> 
  ggplot(mapping = aes(
  x = year, 
  y = GDPpcn3, 
  colour = geo
)) + 
  geom_line() +
    labs(title = "Croatia",
       x = "Year",
       y = "GDP per capita")
```

```{r}
#| echo: FALSE
# Generates descriptive statistics for variables in plot for HR
merged_data |> 
  filter(str_detect(geo, "HR")) |> 
  select(-1,-year) |> 
   st("GDPpcn3", add.median = TRUE)
```

From the data set we see that Croatia are missing populationdata in the subregions HR050, HR061- HR065 and HR021 - HR028.
We therefore only have data from the subregions HR031 - HR037 to take a closer look at GDP per capita.
From the data set, we see that all the subregions have a similar trend pattern, where the fall in GDP in 2019 - 2020 can be explained by Covid - 19.

There are three sub regions in the form of HR031, HR036 and HR037 which are Primorsko Goranska, Istrian and Dubrovnik-Neretva stand out with a higher GDP per Capita.
All these sub-regions are located along the coast, and this would likley attract tourism.

In summary of the data set, Croatia has a minimum value and a maximum value of 4144 and 15985 GDP per year respectively.
capita, with a standard deviation of 2692.
This standard deviation measures how much spread or variance there is in the values in the data set.
Furthermore, the data set has an average of 9644 GDP per capita, with a median of 9155 GDP per capita.
When the median is lower than the mean, this means that the data set has more values closer to the minimum value in the data set.

### Serbia (EU candidate country)

```{r}
#| echo: FALSE
merged_data |> 
  filter(str_detect(geo, "RS")) |> 
  ggplot(mapping = aes(
  x = year, 
  y = GDPpcn3, 
  colour = geo
)) + 
  geom_line() +
    labs(title = "Serbia",
       x = "Year",
       y = "GDP per capita")
```

```{r}
#| echo: FALSE
# Generates descriptive statistics for variables in plot for RS
merged_data |> 
  filter(str_detect(geo, "RS")) |> 
  select(-1,-year) |> 
   st("GDPpcn3", add.median = TRUE)
```

The reason why the dataset lacks GDP per capita in Serbia from 2000 - 2017 is explained by the fact that Serbia is an EU candidate and not part of the EU.
It is therefore partly unclear where we get data from 2017 - 2020, but can be explained by the fact that Serbia applied to join the EU in December 2009, and received the status of "EU candidate" in March 2012.
The reason why there is no data dating back to 2012 may have a connection with the fact that this is a war-torn country.

In the data set, there is an outliers RS221 (Bor region) which stands out significantly in the form of a higher GDP per capita, but also a significant increase in GDP per capita from 2018 - 2020 for approx 5,800 £ to 8,000 £ GDP per capita.
The rest of the sub-regions follow the same trends in GDP per capita, but differ, on the other hand, in that the sub-regions lie in the interval between approximately 2,500 £ to 3,600£ and 4,000 £ to 5,200 £.
This may indicate that the sub-regions are grouped in 2 different intervals in GDP per capita

Summarized by the data set, Serbia has a minimum value and a maximum value of 2534 and 8312 GDP per year respectively.
capita, with a standard deviation of 1081.
This standard deviation measures how much spread or variance there is in the values in the data set.
Furthermore, the data set has an average of 4209 GDP per capita, with a median of 4116 GDP per capita.
When the median is lower than the mean, this means that the data set has more values closer to the minimum value in the data set.

Bosnia and Herzegovia (EU candidate Countries)

The reason why Bosnia and Herzegovina lacks data from 2000 - 2020 in Eurostat is explained by the fact that they did not become an EU candidate until December 2022.

## Part B: Regional inequity

### 1. Literature review

Regional inequality shows variation in regional GDP per capita, and according to @lessmann2017, regional inequality occurs when one region experiences different assumptions than other regions.
Moreover, when the level of economic development is high, there is significant regional inequality [@lessmann2017].
According to @williamson1965, one crucial difference that leads to regional inequality is the access to natural resources.
Regions rich in natural resources grow faster than regions in the rest of the country, which results in inequality.
Furthermore, openness is another critical element of why regional inequality occurs.
A region with more significant access to the international trade market than other regions with limited access will gain more from international trade if international trade costs decrease [@lessmann2017].

Moreover, openness can also contribute to foreign investors investing in a more attractive region, e.g., access to natural resources.
In the end, this led to an imbalance in regional equality.
Additionally, mobility can provide regional inequality through differences in transport costs from one region to another [@lessmann2017].
The differences in transport costs are caused, e.g. by fuel consumption per kilometre.
 

Furthermore, another significant element creating regional inequality is bureaucracy, policy and stability in a country [@lessmann2017].
Civil war affects the country's balance of regional equality and creates different assumptions.
An example is regions in a country that experience increasing aid.
Receiving assistance from foreign aid organisations creates inequality.
Lastly, @lessmann2017 state that an area where ethnic groups dominate as a minority can result in regional inequity.

Based on the research conducted by @lessmann2017, considering regional inequities is essential since it can influence economic outcomes.
The research shows many examples of high- and low-income countries experiencing unbalanced regional development that results in income inequality [@lessmann2017].

**The Gini coefficient is a measurement for inequality, used in regions to measure the inequalities in sub regions of a country @lessmann2017 . We have used the weighted Gini coefficient which takes a regions GDP per capita with regards to population, The reasoning behind this is to get the true Gini coefficient, and not omit the population variable, as it is a important variable for explaining a regions inequality. By looking at the gini coefficient at a NUTS2 level, we are expecting to see the socio-economic differences, and to understand the reasoning behind the inequity based on factors such as resource allocation. By looking at a 20 year span, we are also expecting to be able to predict and forecast future trends.**

### 2. Gini coefficient calculation

To calculate the population-weighted Gini coefficient for GDP for each European NUTS2 level region within Germany, Finland and Romania, we used the data on the GDP and population for the different regions and associated countries.
The Gini coefficient measures income or wealth inequality within a population [@imfnd].
In this case, we want to calculate the Gini coefficient for GDP, which is a measure of economic inequality.
We calculated the Gini coefficient using the following formula:

**In order to calculate the Gini coefficient for NUTS2 regions using NUTS3 data, we first have to group population and GDP per capita of the level 3 data to level 2. This has been done by subtracting the common denominator, country codes. Grouping makes it possible to utilize the formula by weighing the level 2 regions GDP per capita by population, as seen below.**

$GINW_j=\frac{1}{2 \bar{y_j}} \sum_{i}^{n_j}\sum_{l}^{n_j}\frac{p_i}{P_j} \frac{p_l}{P_j} |y_i-y_l|$

We want to calculate the weighted average of the Gini coefficients based on the population of each region or country.
We do this by calculating a new column called gini_n2 using mutate, and applying the gini.wtd function, which compute a weighted Gini coefficient based on GDP per capita.

The population-weighted Gini coefficient provides a measure of economic inequality across all our regions and associated countries, taking into account their respective populations [@imfnd].
A Gini coefficient close to 0 indicates a more equal distribution of income or wealth among the population.
In societies with low Gini coefficients, there is relatively less income or wealth inequality, and resources are more evenly distributed among individuals or households.
These societies tend to have a larger middle class and fewer people living in poverty or extreme wealth [@imfnd]

A Gini coefficient close to 1 signifies a high level of income or wealth inequality.
In societies with high Gini coefficients, a significant portion of the income or wealth is concentrated among a small percentage of the population, leading to pronounced disparities.
These societies may have a large gap between the rich and the poor, with some individuals or households having substantially more resources than others [@imfnd].

The zero values occur as a result of some regions are actually defined as a region, but in reality they are a foreign embassy, army base or offshore energy production with no permanent residence.
This means they do not have any GDP per capita [@eurostat2021].
Moreover, we assume that the zero values can also be a result of missing data report from different regions in Germany and Finland.

### Data Presentation

```{r, echo=FALSE}
#| fig.height = 15, fig.width = 12
# Added fig arguments in chunk in order to control the size of the facet wraps and colourgraded the gini coefficient intervals
merged_data |> 
  ggplot(mapping = aes(
    year, gini_n2, colour = gini_n2, group = nuts2
  )) +
  geom_line(alpha = 0.5) +
  geom_point(alpha = 1, size = 1, stroke = 1,) +
  scale_colour_gradient(low = "skyblue", high = "red") +
  facet_wrap(~ nuts0, ncol = 2, scales = "free", shrink = FALSE) +
               labs(title = "Visualization of the gini coefficient intervals in each country", size = 20) +
  theme(plot.title = element_text(size = 20)) 

   
```

## Outliers

### Bulgaria (South west: BG41)

The main outlier in Bulgaria the line that from 2000, was already over 15%.
This is the region BG41, also known as south west.
The reason behind this outlying difference is because the capital of Bulgaira, Sofia, is a sub-region of BG41.
In Sofia, the GDP per capita in 2020 was nearly triple as much as the second highest sub-regions GDP per capita.

### Italy (Lombardia: ITC4)

Lombardia has the biggest inequality in the whole of Italy, with the highest Gini coefficient ( Gini \>0.15 in 2020).
ITC4 contains big cities such as Milano, which has two of the biggest football teams in the world, and is known for being the capital of fashion.
This attracts tourism and a spike in the regions GDP.

### Belgium (East Flanders: BE23)

Explained by the span of GDP per capita in sub-regions where the highest GDP per capita being 49 964 and the lowest 17 401, while the average spans between \[17 000:21 000\].

### Not included countries

We have not included the following countries based on a lack of observations on level 3 data.
Croatia has 140 observations , Serbia has 68 and Bosnia and Herzegovina became a EU candidate in 2022 and because of this lacks any data.

# Part A: Growth and Inequity

## **Model Estimation**

In this part we want to estimate a simple linear regression model for the year 2010, with regional development, measured in GDP, as the independent variable and regional inequality, measured in Gini, as the dependent variable.
This is because we want to see the impact a change in the regional development will have on inequity in a given country.

Lessmann and Seidel discuss that the national development level can be an outcome of regional inequalities.
Our aim is showcase this with regional development (GDP​) as the independent variable and regional inequality (gini_n2) as the dependent variable.
The reason why we uses GDP on a national level is because "existing studies have a serious bias toward middle- and high-income countries; therefore, the results cannot be generalized"@lessmann_and_seidel2017.
We therefore re-examine this issue based on countries' entire populations.
The level of economic development is measured by the log of the real GDP p.c.
in 1 000 000 euros @lessmann_and_seidel2017.

We will therefore reduce bias by looking at countries entire populations through the GDP of Italy and Germany.
The reason we choose the selected countries is because they are the largest and have the most observations, which reduces potential bias.

**Teori:** En økning i GDP vil føre til en nedgang i Gini coefficient (regional inequity).
Grunnlaget for denne teorien er at en økning på tusen euro i GDP per capita vil ha en større effekt på de regionene som skiller seg ut.
Det kommer et punkt hvor en økning i GDP vil ha en større innvirkning på de som har lite GDP, kontra de som har større GDP.
Dette vil føre til en redusert ulikhet pga.
effekten er ulik, og vi får altså mindre ulikheter.

```{r}
lmDE <- lm(gini_n2 ~ log(GDP), subset(merged_data, year == 2010 & nuts0 == "DE" & gini_n2 > 0))
lmIT <- lm(gini_n2 ~ log(GDP), subset(merged_data, year == 2010 & nuts0 == "IT" & gini_n2 > 0))
huxreg(DE = lmDE, IT = lmIT, statistics = c("r.squared","adj.r.squared", "statistic", "p.value", "deviance"))
```

In table X above we see the coefficients, standard errors, and significance levels (indicated by asterisks) for a simple linear regression model for the year 2010.
The model has GDP as the independent variable and regional Gini as the dependent variable for both Germany (DE) and Italy (IT).

For Germany (DE) the intercept coefficient is 0.155, and it is statistically significant at the 1% level (\*\*\*).
This means that when GDP is zero, the estimated Gini coefficient for Germany is 0.155.
The standard error of the intercept is 0.019, indicating the precision of the estimate.

For Italy (IT) the intercept coefficient is 0.049, and it is statistically significant at the 5% level (\*\*).
When GDP is zero, the estimated Gini coefficient for Italy is 0.049.
The standard error of the intercept is 0.013.

For Germany (DE) the coefficient for GDP is 0.036, but it is not statistically significant.
This means that there is no strong evidence to suggest a linear relationship between GDP and the Gini coefficient in Germany in 2010.
The standard error of the GDP coefficient is relatively large at 0.138, which may contribute to its lack of significance.

For Italy (IT) the coefficient for GDP is 0.007, and it is also not statistically significant.
Similar to Germany, there is no strong evidence of a linear relationship between GDP and the Gini coefficient in Italy in 2010.
The standard error of the GDP coefficient is 0.063.

## **Model Diagnostics**

R-squared is a measure of how well the independent variable (GDP) explains the variation in the dependent variable (regional Gini).
For Germany (DE), the R-squared value is 0.002, indicating that only a very small proportion (0.2%) of the variation in regional Gini can be explained by GDP in the model.
For Italy (IT), the R-squared value is 0.001, also indicating a very weak relationship between GDP and regional Gini.
In this case, only 0.1% of the variation in regional Gini can be explained by GDP in the model.

Adjusted R-squared is a modified version of R-squared that accounts for the number of independent variables in the model.
For Germany (DE), the adjusted R-squared value is -0.030.
A negative adjusted R-squared can occur when the model is a poor fit for the data, and the independent variable(s) do not explain the variation in the dependent variable.
It suggests that the model doesn't fit the German data well.
For Italy (IT), the adjusted R-squared value is -0.066, which is also negative.
This again suggests that the model is not a good fit for the Italian data and that GDP does not explain much of the variation in regional Gini.

The t-statistic measures the significance of the individual coefficients (in this case, the coefficient for GDP) in the linear regression model.
It assesses whether the coefficient is significantly different from zero, indicating whether the independent variable (GDP) has a statistically significant effect on the dependent variable (regional Gini).
For Germany (DE), the t-statistic for GDP is 0.067.
A t-statistic close to zero suggests that the coefficient for GDP is not statistically significant in explaining regional Gini for Germany.
For Italy (IT), the t-statistic for GDP is 0.011.
Similarly, this value is close to zero, indicating that the coefficient for GDP is not statistically significant in explaining regional Gini for Italy.

The p-value associated with the t-statistic assesses the probability of obtaining the observed results (or more extreme results) if there were no real relationship between the independent variable and the dependent variable.
A low p-value (typically below 0.05) suggests statistical significance.
For both Germany and Italy, the p-values associated with the t-statistics are relatively high.
For DE, the p-value is 0.797, and for IT, it is 0.919.
These high p-values indicate that the coefficient for GDP is not statistically significant in either model.

Deviance measures the goodness of fit of the model.
It represents the difference between the model's likelihood and the likelihood of a saturated model (a model with perfect fit).
A lower deviance indicates a better fit.
For Germany (DE), the deviance is 0.189.
A lower deviance would be desirable, but the value is specific to the dataset and model used.
For Italy (IT), the deviance is 0.023, which is lower than that for Germany.
This suggests that the model may fit the Italian data slightly better, but the overall fit is still weak.

In summary, the statistics suggest that the linear regression models for both Germany and Italy in the year 2010, with GDP as the independent variable and regional Gini as the dependent variable, do not provide a good fit for the data.
The relationship between GDP and regional Gini appears to be very weak and statistically insignificant in these models.

```{r}
merged_data_filtered <- merged_data %>%
  filter(str_detect(geo, "IT") & year == 2010 & gini_n2 > 0)

ggplot(merged_data_filtered, aes(x = log(GDP), y = gini_n2)) +
  geom_point() +
  geom_smooth(method = "lm", formula = y ~ x, se = FALSE) +  # Specify the formula
  labs(
    title = "Scatter Plot with Regression Line (Year 2010, IT)",
    x = "GDP (in millions)",
    y = "Gini Index (n2)"
  )

```

```{r}
merged_data_filtered <- merged_data %>%
  filter(str_detect(geo, "DE") & year == 2010 & gini_n2 > 0)

ggplot(merged_data_filtered, aes(x = log(GDP), y = gini_n2)) +
  geom_point() +
  geom_smooth(method = "lm", formula = y ~ x, se = FALSE) +  # Specify the formula
  labs(
    title = "Scatter Plot with Regression Line (Year 2010, DE)",
    x = "GDP (in millions)",
    y = "Gini Index (n2)"
  )

```

```{r}
testssss <- merged_data |> 
  filter(year == 2010) |> 
  select(gini_n2, education)
```

```{r}
lmDETest <- lm(log(gini_n2) ~ log(education/100), subset(merged_data, year == 2010 & nuts0 == "DE" & gini_n2 > 0))

lmITTest <- lm(log(gini_n2) ~ log(education/100), subset(merged_data, year == 2010 & nuts0 == "IT" & gini_n2 > 0))

huxreg(DE = lmDETest, IT = lmITTest, statistics = c("r.squared","adj.r.squared", "statistic", "p.value", "deviance"))
```

```{r}
Test_educ <- merged_data %>%
  filter(str_detect(nuts2, "IT") & year == 2010 & gini_n2 > 0)

ggplot(Test_educ, aes(x = log(education/100), y = log(gini_n2))) +
  geom_point() +
  geom_smooth(method = "lm", formula = y ~ x, se = TRUE) +  # Specify the formula
  labs(
    title = "Scatter Plot with Regression Line (Year 2010, IT)",
    x = "education in %",
    y = "Gini Index (n2)"
  )
```

```{r}
Test_educ <- merged_data %>%
  filter(str_detect(nuts2, "DE") & year == 2010 & gini_n2 > 0)

ggplot(Test_educ, aes(x = log(education), y = gini_n2)) +
  geom_point() +
  geom_smooth(method = "lm", formula = y ~ x, se = FALSE) +  # Specify the formula
  labs(
    title = "Scatter Plot with Regression Line (Year 2010, IT)",
    x = "education in %",
    y = "Gini Index (n2)"
  )
```
