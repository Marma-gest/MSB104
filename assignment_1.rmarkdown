---
title: "assignment_1"
format: html
editor: visual
bibliography: [MSB104.bib]
author: Marius Martinussen, Espen Knutsen
---

```{r}
#| label: setup
#| output: false
#| message: false
#| echo: false
library(eurostat)
library(dineq)
library(readr)
library(tidyverse)
library(stringr)


```


## Part A: Sub-national GDP and GDP per capita

### 1. Data acquisition

Below is a short extract of the raw datasets from Eurostat.


```{r}
#| echo: FALSE
#| output: FALSE
# Loading datasets
# Country code list: "IT", "SE", "BE", "AT", "HR", "RS", "BA", "BG")
nama_10r_3gdp_linear_csv <- read_csv("nama_10r_3gdp_linear.csv.gz", 
    na = "NA")
demo_r_pjanaggr3_linear_csv <- read_csv("demo_r_pjanaggr3_linear.csv.gz", 
    na = "NA")
```

```{r}
#| echo: FALSE
nama_10r_3gdp_linear_csv |> 
    print(
    n = 5,
    width = 80
  )

demo_r_pjanaggr3_linear_csv |> 
  print(
    n = 5,
    width = 80
  )

```


\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--

## Description

The datasets contain observations from all countries in the EU.
The countries in focus are Italy, Sweden, Belgium, Austria, Croatia, Serbia, Bosnia and Herzegovina, and Bulgaria.
We have used their respective country codes to filter out the relevant data and the variables of interest.
The variables we are interested in are the following:

-   geo = Tells us which country and sub-region we are looking at
-   time_period = Observed years
-   obs_value = The value of the observation
-   Unit = Currency

By filtering out irrelevant data and variables, we end up with the following datasets:


```{r}
#| echo: FALSE
# Subset of countries from 2000 to 2020
# Filtering geo = 5 to only get NUTS3 level data
gdp_filtered <- nama_10r_3gdp_linear_csv |> 
  filter(
    nchar(geo) == 5, 
    unit == "MIO_EUR", 
      TIME_PERIOD %in% c(2000:2020),
    str_sub(geo, start = 1L, end = 2L) %in% c("IT", "SE", "BE", "AT", "HR", "RS", "BA", "BG")
    ) |> 
  select(
    year = TIME_PERIOD, 
    geo, GDP = OBS_VALUE
    ) 

```

```{r}
#| echo: FALSE
# Filtering population demo for nuts3 countries and years
# Filtering sex = T to only get the total of both genders
pop <- demo_r_pjanaggr3_linear_csv |> 
    filter(
      nchar(geo) == 5,
      sex == "T",
      age == "TOTAL",
      TIME_PERIOD %in% c(2000:2020), 
    str_sub(geo, start = 1L, end = 2L) %in% c("IT", "SE", "BE", "AT", "HR", "RS", "BA", "BG")
    ) |> 
  select(
    year = TIME_PERIOD, 
    geo, Population = OBS_VALUE
    ) 

```

```{r}
#| echo: FALSE
gdp_filtered |> 
  print(
    n = 5,
    width = 80
  )
pop |> 
  print(
    n = 5,
    width = 80
  )

```

```{r}
#| echo: FALSE
# Merging the two datasets
merged_data <- merge(gdp_filtered, pop, by = "geo") |> 
  select(
    -year.y,
    Year = year.x,)
```

```{r}
#| echo: FALSE
merged_data <- merge(gdp_filtered, pop, by = c("geo","year"), all = TRUE) 


```


### 2. GDP per capita calculation


```{r}
#| echo: FALSE
# Adding GDP variable by deviding gdp on population
merged_data <- merged_data |> 
  mutate(
    GDP_pc_n3 = GDP / Population
  )
```


### 3. Describe analysis


```{r}
#| echo: FALSE
# Adding GDP variable by deviding gdp on population
merged_data <- merged_data |> 
  mutate(GDP_pc_n3 = (GDP / Population)*1000000)
```


Austria


```{r}
AT <- merged_data |> filter(str_detect(geo, "AT"))
  
```

```{r}
AT |> ggplot(mapping = aes(
  x = year, 
  y = GDP_pc_n3, 
  colour = geo
)) + 
  geom_line()
```


Belgium


```{r}
BE <- merged_data |> filter(str_detect(geo, "BE"))
```

```{r}
BE |> ggplot(mapping = aes(
  x = year, 
  y = GDP_pc_n3, 
  colour = geo
)) + 
  geom_line()
```


Bulgaria


```{r}
BG <- merged_data |> filter(str_detect(geo, "BG"))
```

```{r}
BG |> ggplot(mapping = aes(
  x = year, 
  y = GDP_pc_n3, 
  colour = geo
)) + 
  geom_line()
```


Italy

North Italy


```{r}
IT_NORTH <- merged_data |> filter(str_detect(geo, "ITC|ITH"))
```

```{r}
IT_NORTH |> ggplot(mapping = aes(
  x = year, 
  y = GDP_pc_n3, 
  colour = geo
)) + 
  geom_line()
```


South Italy


```{r}
IT_SOUTH <- merged_data |> filter(str_detect(geo, "ITF|ITI|ITG"))
```

```{r}
IT_SOUTH |> ggplot(mapping = aes(
  x = year, 
  y = GDP_pc_n3, 
  colour = geo
)) + 
  geom_line()
```


Sweden


```{r}
SE <- merged_data |> filter(str_detect(geo, "SE"))
```

```{r}
SE |> ggplot(mapping = aes(
  x = year, 
  y = GDP_pc_n3, 
  colour = geo
)) + 
  geom_line()
```


Croatia - become a member in 2012


```{r}
HR <- merged_data |> filter(str_detect(geo, "HR"))
```

```{r}
HR |> ggplot(mapping = aes(
  x = year, 
  y = GDP_pc_n3, 
  colour = geo
)) + 
  geom_line()
```


Serbia (EU candidate countries)


```{r}
RS <- merged_data |> filter(str_detect(geo, "RS"))
```

```{r}
RS |> ggplot(mapping = aes(
  x = year, 
  y = GDP_pc_n3, 
  colour = geo
)) + 
  geom_line()
```


Bosnia and Herzegovia (EU candidate Countries)


```{r}
BA <- merged_data |> filter(str_detect(geo, "BA"))
```

```{r}
BA |> ggplot(mapping = aes(
  x = year, 
  y = GDP_pc_n3, 
  colour = geo
)) + 
  geom_line()
```


## Part B: Regional inequity

### 1. Literature review

### 2. Gini coefficient calculation


```{r}
# Calculating GINI in nuts3 data for nuts2 regions to measure inequity on a nuts2 scale
merged_data <- merged_data |> 
 mutate(
    nuts2 = substr(geo, 1,4),
    nuts0 = substr(geo, 1,2)
 )
```

```{r}
#Grouping NUTS3 to NUTS2
# group_by(id:nuts2, year) %>%
# mutate(id:nuts3) = substr(id_nuts3, 1,4)
# select(id:nuts3, gdp:nuts3, year)
# #
merged_data <- merged_data |> 
  filter(!is.na(Population),
         Population != 0,
         GDP_pc_n3 != 0, 
         GDP_pc_n3 != "NA"
  ) |> 
group_by(nuts2, year) |> 
  mutate(gini_n2 = gini.wtd(GDP_pc_n3, Population)*100) |> 
  ungroup() |> 
  select(nuts0, nuts2, geo, year, GDP, Population, GDP_pc_n3, gini_n2)


```


### Data Presentation.

Austria


```{r}
AT_nuts2 <- merged_data |> filter(str_detect(nuts2, "AT"))
```

```{r}
AT_nuts2 |> ggplot(mapping = aes(
  x = year, 
  y = gini_n2, 
  colour = geo
)) + 
  geom_line()
```

